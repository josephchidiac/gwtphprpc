#summary How to configure and use the generator
#sidebar SideBarPage

=System requirements=
PhpRpcGen has been installed and tested with the following configuration:
    * GWT 2.0.4
    * PHP 5.3.1

Your GWT module must imports the following libraries
{{{
<inherits name='com.google.gwt.http.HTTP' />
<inherits name='com.google.gwt.json.JSON' />
}}}

The PhpRpcGen generator is distributed as a set of JAR files: phpgen.jar + the libraries it depends on (see [Download Download] section and the [DevGuide Developer guide]).

=Configuration file=
==Two main sections==
The configuration file is divided into two main sections:
  * the `<transfer_objects>` element which defines the data structures used as parameters for the remote methods
  * the `<remote_services>` element which defines the remote method interfaces (which should make use of the previously defined "transfer objects" as parameter and result.

{{{
<?xml version="1.0" encoding="UTF-8"?>
<config>
	<transfer_objects package="com.pyc.client.to">
...
	</transfer_objects>
	<remote_services class="com.pyc.client.MyRemoteService">
...
	</remote_services>
</config>
}}}

==Transfer objects==
The main element has a "package" parameter:
{{{
<transfer_objects package="com.pyc.client.to">
}}}
All the transfer objects defined by one XML configuration file are generated in the same Java package.
=Object specifications=
Within the "transfer_objects" element you can find one or more `<object>` elements:
{{{
<object name="Person">
	<attribute name="firstName" type="String"/>
	<attribute name="lastName" type="String"/>
	<attribute name="fullName" type="String"/>
	<attribute name="age" type="int"/>
	<attribute name="size" type="double"/>
	<attribute name="skills" type="String[]"/>
	<attribute name="childrenAges" type="int[]"/>
	<attribute name="hobby" type="Hobby"/>
	<attribute name="contacts" type="Contact[]"/>
	<attribute name="smart" type="boolean"/>
</object>
}}}

An object has a name (must be capitalized) to be used as a class name in the generated Java and PHP code.
An oject has multiple "attributes".

=Supported attribute types=
Here are the types which are supported for object attributes in the XML configuration file. The table also contains the corresponding GWT-Java types.

|| *XML configuration type* || *Java type* ||
|| String || String ||
|| boolean || boolean ||
|| int || int ||
|| double || double ||
|| String`[]` || com.google.gwt.core.client.JsArrayString ||
|| boolean[] || com.google.gwt.core.client.JsArrayBoolean ||
|| int[] || com.google.gwt.core.client.JsArrayInteger ||
|| double[] || com.google.gwt.core.client.JsArrayNumber ||

An attribute can also have an "Object" type. In such case, the type must be specified in a `<object>` element of the same XML file.
Example: the "hobby" attribute of the "Person" object (see above in this page):
{{{
<attribute name="hobby" type="Hobby"/>
}}}
should be defined in the same XML file as
{{{
<object name="Hobby">
	<attribute name="description" type="String"/>
</object>
}}}